package ca.weblite.qrscannerdemo;

import static com.codename1.ui.CN.*;

import com.codename1.ext.codescan.CodeScanner;
import com.codename1.ext.codescan.ScanResult;
import com.codename1.system.Lifecycle;
import com.codename1.ui.*;
import com.codename1.ui.layouts.*;
import com.codename1.io.*;
import com.codename1.ui.plaf.*;
import com.codename1.ui.util.Resources;
import org.littlemonkey.qrscanner.QRScanner;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose
 * of building native mobile applications using Java.
 */
public class QRScannerDemo extends Lifecycle {
    @Override
    public void runApp() {
        Form hi = new Form("Hi World", BoxLayout.y());
        if (CodeScanner.isSupported()) {
            Button scanQRCode = new Button("Scan QR Code");
            hi.add(scanQRCode);
            scanQRCode.addActionListener(e -> scanQRCode());

            Button scanBarCode = new Button("Scan Bar Code");
            hi.add(scanBarCode);
            scanBarCode.addActionListener(e -> scanBarCode());

            Button scanAnyCode = new Button("Scan Any Code");
            hi.add(scanAnyCode);
            scanAnyCode.addActionListener(e -> scanAnyCode());
        } else {
            hi.add(new Label("Code Scanner not supported on this platform"));
        }

        hi.show();
    }

    private void scanQRCode() {
        Display.getInstance().setProperty("scanAllCodeTypes", "false");
        QRScanner.scanQRCode(new ScanResult() {
            @Override
            public void scanCompleted(String contents, String formatName, byte[] rawBytes) {
                Dialog.show("Scan Completed", "Contents: " + contents + " Format Name: " + formatName + " Raw Bytes: " + rawBytes, "OK", null);
            }

            @Override
            public void scanCanceled() {
                Dialog.show("Scan Canceled", "You canceled the scan", "OK", null);
            }

            @Override
            public void scanError(int errorCode, String message) {
                Dialog.show("Scan Error", "Error Code: " + errorCode + " Message: " + message, "OK", null);
            }
        });
    }

    private void scanBarCode() {
        Display.getInstance().setProperty("scanAllCodeTypes", "false");
        QRScanner.scanBarCode(new ScanResult() {
            @Override
            public void scanCompleted(String contents, String formatName, byte[] rawBytes) {
                Dialog.show("Scan Completed", "Contents: " + contents + " Format Name: " + formatName + " Raw Bytes: " + rawBytes, "OK", null);
            }

            @Override
            public void scanCanceled() {
                Dialog.show("Scan Canceled", "You canceled the scan", "OK", null);
            }

            @Override
            public void scanError(int errorCode, String message) {
                Dialog.show("Scan Error", "Error Code: " + errorCode + " Message: " + message, "OK", null);
            }
        });
    }

    private void scanAnyCode() {
        Display.getInstance().setProperty("scanAllCodeTypes", "true");
        QRScanner.scanBarCode(new ScanResult() {
            @Override
            public void scanCompleted(String contents, String formatName, byte[] rawBytes) {
                Dialog.show("Scan Completed", "Contents: " + contents + " Format Name: " + formatName + " Raw Bytes: " + rawBytes, "OK", null);
            }

            @Override
            public void scanCanceled() {
                Dialog.show("Scan Canceled", "You canceled the scan", "OK", null);
            }

            @Override
            public void scanError(int errorCode, String message) {
                Dialog.show("Scan Error", "Error Code: " + errorCode + " Message: " + message, "OK", null);
            }
        });
    }
}
